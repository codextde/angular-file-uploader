{"version":3,"file":"angular-file-uploader.js","sources":["../../../projects/angular-file-uploader/src/lib/angular-file-uploader.component.ts","../../../projects/angular-file-uploader/src/lib/angular-file-uploader.module.ts","../../../projects/angular-file-uploader/src/public-api.ts","../../../projects/angular-file-uploader/src/angular-file-uploader.ts"],"sourcesContent":["import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport {\r\n  ReplaceTexts,\r\n  AngularFileUploaderConfig,\r\n  UploadInfo,\r\n  UploadApi,\r\n} from './angular-file-uploader.types';\r\nimport {\r\n  HttpClient,\r\n  HttpHeaders,\r\n  HttpParams,\r\n  HttpEventType,\r\n} from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'angular-file-uploader',\r\n  templateUrl: './angular-file-uploader.component.html',\r\n  styleUrls: ['./angular-file-uploader.component.css'],\r\n})\r\nexport class AngularFileUploaderComponent implements OnChanges {\r\n  // Inputs\r\n  @Input()\r\n  config: AngularFileUploaderConfig;\r\n\r\n  @Input()\r\n  resetUpload = false;\r\n\r\n  // Outputs\r\n  @Output()\r\n  ApiResponse = new EventEmitter();\r\n\r\n  @Output()\r\n  everythingDone: EventEmitter<UploadInfo[]> = new EventEmitter<UploadInfo[]>();\r\n\r\n  // Properties\r\n  theme: string;\r\n  id: number;\r\n  hideProgressBar: boolean;\r\n  maxSize: number;\r\n  uploadAPI: string;\r\n  method: string;\r\n  formatsAllowed: string;\r\n  multiple: boolean;\r\n  headers: HttpHeaders | { [header: string]: string | string[] };\r\n  params: HttpParams | { [param: string]: string | string[] };\r\n  responseType: string;\r\n  hideResetBtn: boolean;\r\n  hideSelectBtn: boolean;\r\n  allowedFiles: File[] = [];\r\n  notAllowedFiles: {\r\n    fileName: string;\r\n    fileSize: string;\r\n    errorMsg: string;\r\n  }[] = [];\r\n  Caption: string[] = [];\r\n  isAllowedFileSingle = true;\r\n  progressBarShow = false;\r\n  enableUploadBtn = false;\r\n  uploadMsg = false;\r\n  afterUpload = false;\r\n  uploadStarted = false;\r\n  uploadMsgText: string;\r\n  uploadMsgClass: string;\r\n  uploadPercent: number;\r\n  replaceTexts: ReplaceTexts;\r\n  currentUploads: any[] = [];\r\n  fileNameIndex = true;\r\n\r\n  private idDate: number = +new Date();\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    // Track changes in Configuration and see if user has even provided Configuration.\r\n    if (changes.config && this.config) {\r\n      // Assign User Configurations to Library Properties.\r\n      this.theme = this.config.theme || '';\r\n      this.id =\r\n        this.config.id ||\r\n        parseInt((this.idDate / 10000).toString().split('.')[1], 10) +\r\n          Math.floor(Math.random() * 20) * 10000;\r\n      this.hideProgressBar = this.config.hideProgressBar || false;\r\n      this.hideResetBtn = this.config.hideResetBtn || false;\r\n      this.hideSelectBtn = this.config.hideSelectBtn || false;\r\n      this.maxSize = (this.config.maxSize || 20) * 1024000; // mb to bytes.\r\n      this.uploadAPI = this.config.uploadAPI.url;\r\n      this.method = this.config.uploadAPI.method || 'POST';\r\n      this.formatsAllowed =\r\n        this.config.formatsAllowed || '.jpg,.png,.pdf,.docx,.txt,.gif,.jpeg';\r\n      this.multiple = this.config.multiple || false;\r\n      this.headers = this.config.uploadAPI.headers || {};\r\n      this.params = this.config.uploadAPI.params || {};\r\n      this.responseType = this.config.uploadAPI.responseType || null;\r\n      this.fileNameIndex = this.config.fileNameIndex === false ? false : true;\r\n      this.replaceTexts = {\r\n        selectFileBtn: this.multiple ? 'Select Files' : 'Select File',\r\n        resetBtn: 'Reset',\r\n        uploadBtn: 'Upload',\r\n        dragNDropBox: 'Drag N Drop',\r\n        attachPinBtn: this.multiple ? 'Attach Files...' : 'Attach File...',\r\n        afterUploadMsg_success: 'Successfully Uploaded !',\r\n        afterUploadMsg_error: 'Upload Failed !',\r\n        sizeLimit: 'Size Limit',\r\n      }; // default replaceText.\r\n      if (this.config.replaceTexts) {\r\n        // updated replaceText if user has provided any.\r\n        this.replaceTexts = {\r\n          ...this.replaceTexts,\r\n          ...this.config.replaceTexts,\r\n        };\r\n      }\r\n    }\r\n\r\n    // Reset when resetUpload value changes from false to true.\r\n    if (changes.resetUpload) {\r\n      if (changes.resetUpload.currentValue === true) {\r\n        this.resetFileUpload();\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  // Reset following properties.\r\n  resetFileUpload() {\r\n    this.allowedFiles = [];\r\n    this.Caption = [];\r\n    this.notAllowedFiles = [];\r\n    this.uploadMsg = false;\r\n    this.enableUploadBtn = false;\r\n  }\r\n\r\n  // When user selects files.\r\n  onChange(event: any) {\r\n\r\n    this.notAllowedFiles = [];\r\n    const fileExtRegExp: RegExp = /(?:\\.([^.]+))?$/;\r\n    let fileList: FileList;\r\n\r\n    if (this.afterUpload || !this.multiple) {\r\n      this.allowedFiles = [];\r\n      this.Caption = [];\r\n      this.afterUpload = false;\r\n    }\r\n\r\n    if (event.type === 'drop') {\r\n      fileList = event.dataTransfer.files;\r\n    } else {\r\n      fileList = event.target.files || event.srcElement.files;\r\n    }\r\n\r\n    // 'forEach' does not exist on 'filelist' that's why this good old 'for' is used.\r\n    for (let i = 0; i < fileList.length; i++) {\r\n      const currentFileExt = fileExtRegExp\r\n        .exec(fileList[i].name)[1]\r\n        .toLowerCase(); // Get file extension.\r\n      const isFormatValid = this.formatsAllowed.includes(currentFileExt);\r\n\r\n      const isSizeValid = fileList[i].size <= this.maxSize;\r\n\r\n      // Check whether current file format and size is correct as specified in the configurations.\r\n      if (isFormatValid && isSizeValid) {\r\n        this.allowedFiles.push(fileList[i]);\r\n      } else {\r\n        this.notAllowedFiles.push({\r\n          fileName: fileList[i].name,\r\n          fileSize: this.convertSize(fileList[i].size),\r\n          errorMsg: !isFormatValid ? 'Invalid format' : 'Invalid size',\r\n        });\r\n      }\r\n    }\r\n\r\n    // If there's any allowedFiles.\r\n    if (this.allowedFiles.length > 0) {\r\n      this.enableUploadBtn = true;\r\n      // Upload the files directly if theme is attach pin (as upload btn is not there for this theme).\r\n      if (this.theme === 'attachPin') {\r\n        this.uploadFiles();\r\n      }\r\n    } else {\r\n      this.enableUploadBtn = false;\r\n    }\r\n\r\n    this.uploadMsg = false;\r\n    this.uploadStarted = false;\r\n    this.uploadPercent = 0;\r\n    event.target.value = null;\r\n  }\r\n\r\n  uploadFiles() {\r\n    this.progressBarShow = true;\r\n    this.uploadStarted = true;\r\n    this.notAllowedFiles = [];\r\n    let isError = false;\r\n    this.isAllowedFileSingle = this.allowedFiles.length <= 1;\r\n    const formData = new FormData();\r\n\r\n    // Add data to be sent in this request\r\n    this.allowedFiles.forEach((file, i) => {\r\n      formData.append(\r\n        this.Caption[i] || 'file' + (this.fileNameIndex ? i : ''),\r\n        this.allowedFiles[i]\r\n      );\r\n    });\r\n\r\n    /*\r\n    Not Working, Headers null\r\n    // Contruct Headers\r\n    const headers = new HttpHeaders();\r\n    for (const key of Object.keys(this.headers)) {\r\n      headers.append(key, this.headers[key]);\r\n    }\r\n\r\n    // Contruct Params\r\n    const params = new HttpParams();\r\n    for (const key of Object.keys(this.params)) {\r\n      params.append(key, this.params[key]);\r\n    } */\r\n\r\n    const options = {\r\n      headers: this.headers,\r\n      params: this.params,\r\n    };\r\n\r\n    if (this.responseType) (options as any).responseType = this.responseType;\r\n\r\n    this.http\r\n      .request(this.method.toUpperCase(), this.uploadAPI, {\r\n        body: formData,\r\n        reportProgress: true,\r\n        observe: 'events',\r\n        ...options,\r\n      })\r\n      .subscribe(\r\n        (event) => {\r\n          // Upload Progress\r\n          if (event.type === HttpEventType.UploadProgress) {\r\n            this.enableUploadBtn = false; // button should be disabled if process uploading\r\n            const currentDone = event.loaded / event.total;\r\n            this.uploadPercent = Math.round((event.loaded / event.total) * 100);\r\n          } else if (event.type === HttpEventType.Response) {\r\n            if (event.status === 200 || event.status === 201) {\r\n              // Success\r\n              this.progressBarShow = false;\r\n              this.enableUploadBtn = false;\r\n              this.uploadMsg = true;\r\n              this.afterUpload = true;\r\n              if (!isError) {\r\n                this.uploadMsgText = this.replaceTexts.afterUploadMsg_success;\r\n                this.uploadMsgClass = 'text-success lead';\r\n              }\r\n            } else {\r\n              // Failure\r\n              isError = true;\r\n              this.handleErrors();\r\n            }\r\n\r\n            this.ApiResponse.emit(event);\r\n          } else {\r\n            //console.log('Event Other: ', event);\r\n          }\r\n        },\r\n        (error) => {\r\n          // Failure\r\n          isError = true;\r\n          this.handleErrors();\r\n          this.ApiResponse.emit(error);\r\n        }\r\n      );\r\n  }\r\n\r\n  handleErrors() {\r\n    this.progressBarShow = false;\r\n    this.enableUploadBtn = false;\r\n    this.uploadMsg = true;\r\n    this.afterUpload = true;\r\n    this.uploadMsgText = this.replaceTexts.afterUploadMsg_error;\r\n    this.uploadMsgClass = 'text-danger lead';\r\n  }\r\n\r\n  removeFile(i: any, sf_na: any) {\r\n    if (sf_na === 'sf') {\r\n      this.allowedFiles.splice(i, 1);\r\n      this.Caption.splice(i, 1);\r\n    } else {\r\n      this.notAllowedFiles.splice(i, 1);\r\n    }\r\n\r\n    if (this.allowedFiles.length === 0) {\r\n      this.enableUploadBtn = false;\r\n    }\r\n  }\r\n\r\n  convertSize(fileSize: number): string {\r\n    return fileSize < 1024000\r\n      ? (fileSize / 1024).toFixed(2) + ' KB'\r\n      : (fileSize / 1024000).toFixed(2) + ' MB';\r\n  }\r\n\r\n  attachpinOnclick() {\r\n    const element = document.getElementById('sel' + this.id);\r\n    if (element !== null) {\r\n      element.click();\r\n    }\r\n  }\r\n\r\n  drop(event: any) {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n    this.onChange(event);\r\n  }\r\n\r\n  allowDrop(event: any) {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n    event.dataTransfer.dropEffect = 'copy';\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { AngularFileUploaderComponent } from './angular-file-uploader.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [AngularFileUploaderComponent],\r\n  exports: [AngularFileUploaderComponent],\r\n})\r\nexport class AngularFileUploaderModule {}\r\n","/*\r\n * Public API Surface of angular-file-uploader\r\n */\r\n\r\nexport * from './lib/angular-file-uploader.component';\r\nexport * from './lib/angular-file-uploader.module';\r\nexport * from './lib/angular-file-uploader.types';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}